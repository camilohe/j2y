---

phases:
  - phase: Windows
    queue: 
      demands: agent.os -equals Windows_NT
      parallel: '$[ true ]'
    steps:
      -
        task: PowerShell@1
        displayName: Check Format
        inputs:
          scriptType: filePath
          scriptName: ./ci/windows/build.ps1
          arguments: "-Format"
          workingFolder: ""
          inlineScript: "# You can write your powershell scripts inline here. \n# You can also pass predefined and custom variables to this scripts using arguments\n\n Write-Host \"Hello World\""
          failOnStandardError: "false"
      -
        task: PowerShell@1
        displayName: Run Tests
        inputs:
          scriptType: filePath
          scriptName: ./ci/windows/build.ps1
          arguments: "-Test"
          workingFolder: ""
          inlineScript: "# You can write your powershell scripts inline here. \n# You can also pass predefined and custom variables to this scripts using arguments\n\n Write-Host \"Hello World\""
          failOnStandardError: "false"
      -
        task: PowerShell@1
        displayName: Build
        inputs:
          scriptType: filePath
          scriptName: ./ci/windows/build.ps1
          arguments: "-Build -Release"
          workingFolder: ""
          inlineScript: "# You can write your powershell scripts inline here. \n# You can also pass predefined and custom variables to this scripts using arguments\n\n Write-Host \"Hello World\""
          failOnStandardError: "false"
      -
        task: PublishBuildArtifacts@1
        displayName: "Publish Artifact: Release Build"
        inputs:
          PathtoPublish: ./target/release/
          ArtifactName: drop
          ArtifactType: Container
          TargetPath: "\\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)"
          Parallel: "false"
          ParallelCount: "8"
  - phase: Linux
    queue: 
      demands: agent.os -equals Linux
      parallel: '$[ true ]'
    steps:
      -
        task: ShellScript@2
        displayName: Install Rust
        inputs:
          scriptPath: ./ci/linux/install.sh
      -
        task: ShellScript@2
        displayName: Check Syntax
        inputs:
          scriptPath: ./ci/linux/format.sh
      -
        task: ShellScript@2
        displayName: Run Tests
        inputs:
          scriptPath: ./ci/linux/test.sh
      -
        task: ShellScript@2
        displayName: Build
        inputs:
          scriptPath: ./ci/linux/build.sh
      -
        task: PublishBuildArtifacts@1
        displayName: "Publish Artifact: Release Build"
        inputs:
          PathtoPublish: ./target/release/
          ArtifactName: drop
          ArtifactType: Container
          TargetPath: "\\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)"
          Parallel: "false"
          ParallelCount: "8"
  - phase: Mac
    queue: 
      demands: agent.os -equals Darwin
      parallel: '$[ true ]'
    steps:
      -
        task: ShellScript@2
        displayName: Install Rust
        inputs:
          scriptPath: ./ci/mac/install.sh
      -
        task: ShellScript@2
        displayName: Check Syntax
        inputs:
          scriptPath: ./ci/mac/format.sh
      -
        task: ShellScript@2
        displayName: Run Tests
        inputs:
          scriptPath: ./ci/mac/test.sh
      -
        task: ShellScript@2
        displayName: Build
        inputs:
          scriptPath: ./ci/mac/build.sh
      -
        task: PublishBuildArtifacts@1
        displayName: "Publish Artifact: Release Build"
        inputs:
          PathtoPublish: ./target/release/
          ArtifactName: drop
          ArtifactType: Container
          TargetPath: "\\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)"
          Parallel: "false"
          ParallelCount: "8"
